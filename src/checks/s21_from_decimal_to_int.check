#include "../s21_decimal.h"

#test test1
s21_decimal res = {0};
int a;
s21_from_int_to_decimal(800, &res);
s21_from_decimal_to_int(res, &a);
ck_assert_int_eq(a, 800);

#test test2
s21_decimal res = {0};
res.bits[0] = 0;
res.bits[1] = 11;
res.bits[2] = 0;
res.bits[3] = 0;
int d;
int check = s21_from_decimal_to_int(res, &d);
ck_assert_int_eq(check, 1);

#test test3
s21_decimal res = {0};
res.bits[0] = 8;
res.bits[1] = 11;
res.bits[2] = 0;
res.bits[3] = -2147483648;
int d;
int check = s21_from_decimal_to_int(res, &d);
ck_assert_int_eq(check, 1);

#test test4
s21_decimal res = {0};
res.bits[0] = 88;
res.bits[1] = 0;
res.bits[2] = 9;
res.bits[3] = -2147483648;
int d;
int check = s21_from_decimal_to_int(res, &d);
ck_assert_int_eq(check, 1);

#test test5
s21_decimal res = {0};
res.bits[0] = 88;
res.bits[1] = 0;
res.bits[2] = 0;
res.bits[3] = -2147483648;
int d;
s21_from_decimal_to_int(res, &d);
ck_assert_int_eq(d, -88);

#test test6
s21_decimal src1;
int code = 0;
src1.bits[0] = 0b10110011000011000010101010010001;
src1.bits[1] = 0b00000000000000000000000000001100;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b10000000000001110000000000000000;
int result;
code = s21_from_decimal_to_int(src1, &result);
ck_assert_int_eq(result, -5454);
ck_assert_int_eq(code, 0);

#test test7
s21_decimal src1;
src1.bits[0] = 0b00000111100110110001111110011000;
src1.bits[1] = 0b01100110010010001001000110100011;
src1.bits[2] = 0b00000000000001001000101100011101;
src1.bits[3] = 0b10000000000110000000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, -5);

#test test8
s21_decimal src1;
src1.bits[0] = 0b00011011110101100011100010001010;
src1.bits[1] = 0b00000000000000101101010000010100;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b00000000000001100000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, 796132784);

#test test9
s21_decimal src1;
src1.bits[0] = 0b01111000100010101111010011001010;
src1.bits[1] = 0b01100010000010101110010010000111;
src1.bits[2] = 0b00100111111001000001101011010101;
src1.bits[3] = 0b10000000000101010000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, -12345677);

#test test10
s21_decimal src1;
src1.bits[0] = 0b01100101111011101101100101011111;
src1.bits[1] = 0b01011100001001010100001101000110;
src1.bits[2] = 0b00000000000000000000000000000001;
src1.bits[3] = 0b00000000000100110000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, 2);

#test test11
s21_decimal src1;
src1.bits[0] = 0b00000000000000000000000001111101;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b00000000000000100000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, 1);

#test test12
s21_decimal src1;
src1.bits[0] = 0b00000000000000000000000001111101;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b10000000000000100000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, -1);

#test test13
s21_decimal src1;
src1.bits[0] = 0b00000000000000000000010011001001;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b10000000000000100000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, -12);

#test test14
s21_decimal src1;
src1.bits[0] = 0b00000000000000000000000000100011;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b10000000000000010000000000000000;
int result;
int *res = &result;
s21_from_decimal_to_int(src1, res);
ck_assert_int_eq(result, -3);

#test test15
s21_decimal src1;
src1.bits[0] = 0b11111111111111111111111111111111;
src1.bits[1] = 0b00000000000000000000000000000001;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b10000000000000000000000000000000;
int result;
int check = s21_from_decimal_to_int(src1, &result);
ck_assert_int_eq(1, check);

#test test16
s21_decimal src1;
src1.bits[0] = 0b00000000000000000000000000000000;
src1.bits[1] = 0b00000000000000000000000000000001;
src1.bits[2] = 0b11111111111111111111111111111111;
src1.bits[3] = 0b10000000000000000000000000000000;
int result;
int check = s21_from_decimal_to_int(src1, &result);
ck_assert_int_eq(1, check);
